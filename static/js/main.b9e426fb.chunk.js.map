{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","htmlFor","type","classNames","event","target","onBlur","NewMovie","onAdd","count","setCount","newMovie","setNewMovie","trim","handleInputChange","fieldName","onSubmit","e","preventDefault","trimmedMovie","newCount","disabled","App","moviesFromServer","setMovies","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9e426fb.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Movie } from '../../types/Movie';\r\nimport './MovieCard.scss';\r\n\r\ntype Props = {\r\n  movie: Movie,\r\n};\r\n\r\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\r\n  <div className=\"card\" data-cy=\"movie-card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={movie.imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{movie.title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {movie.description}\r\n        <br />\r\n        <a href={movie.imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\nimport { Movie } from '../../types/Movie';\r\n\r\ninterface Props {\r\n  movies: Movie[];\r\n}\r\n\r\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard\r\n        key={movie.imdbId}\r\n        movie={movie}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n","import classNames from 'classnames';\r\nimport React, { useState } from 'react';\r\n\r\ntype Props = {\r\n  name: string,\r\n  value: string,\r\n  label?: string,\r\n  placeholder?: string,\r\n  required?: boolean,\r\n  onChange?: (newValue: string) => void,\r\n};\r\n\r\nfunction getRandomDigits() {\r\n  return Math.random()\r\n    .toFixed(16)\r\n    .slice(2);\r\n}\r\n\r\nexport const TextField: React.FC<Props> = ({\r\n  name,\r\n  value,\r\n  label = name,\r\n  placeholder = `Enter ${label}`,\r\n  required = false,\r\n  onChange = () => {},\r\n}) => {\r\n  // generage a unique id once on component load\r\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\r\n\r\n  // To show errors only if the field was touched (onBlur)\r\n  const [touched, setTouched] = useState(false);\r\n  const hasError = touched && required && !value;\r\n\r\n  return (\r\n    <div className=\"field\">\r\n      <label className=\"label\" htmlFor={id}>\r\n        {label}\r\n      </label>\r\n\r\n      <div className=\"control\">\r\n        <input\r\n          type=\"text\"\r\n          id={id}\r\n          data-cy={`movie-${name}`}\r\n          className={classNames('input', {\r\n            'is-danger': hasError,\r\n          })}\r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={event => onChange(event.target.value)}\r\n          onBlur={() => setTouched(true)}\r\n        />\r\n      </div>\r\n\r\n      {hasError && (\r\n        <p className=\"help is-danger\">{`${label} is required`}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n\n  const [newMovie, setNewMovie] = useState({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  });\n\n  const reset = () => {\n    setNewMovie({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  };\n\n  const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const trimmedMovie = {\n      title: newMovie.title.trim(),\n      description: newMovie.description.trim(),\n      imgUrl: newMovie.imgUrl.trim(),\n      imdbUrl: newMovie.imdbUrl.trim(),\n      imdbId: newMovie.imdbId.trim(),\n    };\n\n    onAdd(trimmedMovie);\n    setCount((newCount) => newCount + 1);\n    reset();\n  };\n\n  const hasError\n    = !newMovie.title.trim()\n    || !newMovie.imdbUrl.trim()\n    || !newMovie.imgUrl.trim()\n    || !newMovie.imdbId.trim();\n\n  const handleInputChange = (fieldName: string, value: string) => {\n    setNewMovie({\n      ...newMovie,\n      [fieldName]: value,\n    });\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count} onSubmit={onSubmit}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={newMovie.title}\n        onChange={(value) => handleInputChange('title', value)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={newMovie.description}\n        onChange={(value) => handleInputChange('description', value)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={newMovie.imgUrl}\n        onChange={(value) => handleInputChange('imgUrl', value)}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={newMovie.imdbUrl}\n        onChange={(value) => handleInputChange('imdbUrl', value)}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={newMovie.imdbId}\n        onChange={(value) => handleInputChange('imdbId', value)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={hasError}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { Movie } from './types/Movie';\n\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies(currentMovies => [...currentMovies, movie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}